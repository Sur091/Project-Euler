import math
import numpy as np
def primes(n):
    if n < 2: return []
    l_ = int(n-1) // 2
    pri = np.full(l_, True, bool)

    for a in range(int(n ** 0.5) // 2):
        if pri[a]:
            pri[2*a*a + 6*a + 3:: 2*a+3] = False
    
    return [2]+[2*i+3 for i, a in enumerate(pri) if a]

def calculate(p1, p2):
    return p1*math.log(p2) + p2*math.log(p1)


k = 15704473
constant = 800800 * math.log(800800)
lst = primes(k)
total = 0
i, j = 0, len(lst)-1
while i < j:
    p1, p2 = lst[i], lst[j]
    #print(p1, p2, calculate(p1, p2), constant)
    while calculate(p1, p2) > constant and j > i:
        j -= 1
        p2 = lst[j]
    total += j-i
    i += 1
print(total)
