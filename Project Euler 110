lst =   [2,  3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47]
power = [1, 1, 1, 1,  1,  1,  1,  1,  1,  1,  1,  1, 1, 1, 1]



def find_min_for_given_list(power):
    def number():
        num = 1
        for n, p in zip(lst, power):
            num *= n ** p
        return num

    def factors():
        fact = 1
        for n in power:
            fact *= 2*n + 1
        return fact//2+1

    minimum = 10**17
    factors_min = []
    for two in range(1, 16): # Assuming that for 2**x, x doesn't exceed 15 (for no reason)
        for three in range(1, 10):
            for five in range(1, 5):
                for seven in range(1, 3):
                    power = [two, three, five, seven] + power[4:]
                    if factors() >= 4_000_000 and number() < minimum:
                        minimum = number()
                        factors_min = power[:] 
    return minimum

minimum = 10 **17
for i in range(14, 5, -1):
    power[i] = 0
    minimum = min(minimum, find_min_for_given_list(power))

print(minimum)
